/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fril;

import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.SocketException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.net.ssl.HttpsURLConnection;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CuongPhan
 */
public class ListItems extends javax.swing.JFrame {
    private boolean bFirstTimeCmbLoad = false;
    //List<UserAccount> lstUserAccount = new List<UserAccount>();
    Timer myTimer = null;
    private static int daysRemain = 0;
    /**
     * Creates new form ListItems
     */
    public ListItems() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        SP_exhibition = new javax.swing.JScrollPane();
        jTable_exhibition = new javax.swing.JTable();
        SP_trading = new javax.swing.JScrollPane();
        jTable_trading = new javax.swing.JTable();
        SP_sold = new javax.swing.JScrollPane();
        jTable_sold = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        SP_exhibition.setViewportView(jTable_exhibition);

        jTabbedPane1.addTab("Exhibition", SP_exhibition);

        SP_trading.setViewportView(jTable_trading);

        jTabbedPane1.addTab("During Trading", SP_trading);

        SP_sold.setViewportView(jTable_sold);

        jTabbedPane1.addTab("Sold", SP_sold);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/upload.png"))); // NOI18N
        jButton1.setText("Add new product");
        jButton1.setDoubleBuffered(true);
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton1.setIconTextGap(5);
        jButton1.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/Settings-icon.png"))); // NOI18N
        jButton2.setText("Setting");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton2.setIconTextGap(10);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/user-group-icon.png"))); // NOI18N
        jButton3.setText("Manage Accounts");
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton3.setIconTextGap(5);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/adduser.jpg"))); // NOI18N
        jButton4.setText("Add Account");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton4.setIconTextGap(5);
        jButton4.setMargin(new java.awt.Insets(2, 2, 2, 14));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/inventory_icon.jpg"))); // NOI18N
        jButton6.setText("Product Schedule");
        jButton6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButton6.setIconTextGap(5);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fril/Images/User-icon.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ListItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ListItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ListItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ListItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ListItems().setVisible(true);
//            }
//        });
//    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane SP_exhibition;
    private javax.swing.JScrollPane SP_sold;
    private javax.swing.JScrollPane SP_trading;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable_exhibition;
    private javax.swing.JTable jTable_sold;
    private javax.swing.JTable jTable_trading;
    // End of variables declaration//GEN-END:variables
    
    public void ListItems() throws SocketException{
        
        boolean bAccessible = GetGrant2Access(daysRemain);
        //FrmLicenseRequest frmLicenseRequest = new FrmLicenseRequest(bAccessible, daysRemain);
        //frmLicenseRequest.ShowDialog();
        
        myTimer.setDelay(Utility.g_refreshPeriod);
    }
    public void refreshTradingListView() throws IOException{
        String shippingDate="", shippingAddress="";
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable_trading.getModel();
        if(null!=defaultTableModel){
            defaultTableModel.setRowCount(0);
        }
        List<ItemShortInfo> itemList = Utility.getProducts("https://fril.jp/ajax/item/trading");
        for(int i=0; i<itemList.size(); i++){
           
            URL url = new URL(itemList.get(i).strImageLink);
            HttpsURLConnection req = (HttpsURLConnection)url.openConnection();
            req.setRequestMethod("GET");
            
            //get image
            BufferedImage bufferedImage = null;
            try {
                bufferedImage = ImageIO.read(req.getInputStream());
                
            } catch (IOException e) {
                
            }
            //get shipping date information
            String tradingFullPage = getTradingFullPage(itemList.get(i).strHref);
            
            int startIndex = tradingFullPage.indexOf("<div class=\"card\">");
            if(startIndex > 0){
                String cardSection = tradingFullPage.substring(startIndex);
                String shippingDeadLineText = Utility.extractAttribute(cardSection, 0, "<div class=\"col s5\">", "</div>");
                shippingDeadLineText = shippingDeadLineText.trim();
                shippingDate = Utility.extractAttribute(cardSection, 0, "<span class=\"large-text\">", "</br></span>");
            }
            
            int startIndex2 = tradingFullPage.indexOf("<!-- _address_info -->");
            if(startIndex2 > 0){
                String addressInfoSection = tradingFullPage.substring(startIndex2);
                String partern = "<div class=\"col s12\">";
                int startIndex3 = addressInfoSection.indexOf(partern);
                if(startIndex3 > 0){
                    shippingAddress = Utility.extractAttribute(addressInfoSection.substring(startIndex3),
                            partern.length()+1, partern, "</div>");
                    shippingAddress = shippingAddress.replace("<p>", "");
                    shippingAddress = shippingAddress.replace("<\\p>", "");
                    shippingAddress = shippingAddress.replace("<br />", "\n");
                }
            }
            
            if(null!=bufferedImage){
                defaultTableModel.addRow(new Object[]{bufferedImage, itemList.get(i).strHref, itemList.get(i).strMediaHeading, itemList.get(i).strWaiting, shippingDate, shippingAddress});
            }
            else{
                defaultTableModel.addRow(new Object[]{itemList.get(i).strHref, itemList.get(i).strMediaHeading, itemList.get(i).strWaiting, shippingDate, shippingAddress});
            }
           
        }
    }
    
    public void refreshListView() throws IOException{
        DefaultTableModel defaultTableModel = (DefaultTableModel)jTable_exhibition.getModel();
        if(null!=defaultTableModel){
            defaultTableModel.setRowCount(0);
        }
        List<ItemShortInfo> itemList = Utility.getProducts("https://fril.jp/ajax/item/selling");
        for(int i=0; i<itemList.size(); i++){
           
            URL url = new URL(itemList.get(i).strImageLink);
            HttpsURLConnection req = (HttpsURLConnection)url.openConnection();
            req.setRequestMethod("GET");
            
            //get image
            BufferedImage bufferedImage = null;
            try {
                bufferedImage = ImageIO.read(req.getInputStream());
                
            } catch (IOException e) {
                
            }
            //add row
            if(null!=bufferedImage){
                defaultTableModel.addRow(new Object[]{bufferedImage, itemList.get(i).strHref, itemList.get(i).strMediaHeading, itemList.get(i).strWaiting});
            }
            else{
                defaultTableModel.addRow(new Object[]{itemList.get(i).strHref, itemList.get(i).strMediaHeading, itemList.get(i).strWaiting});
            }
           
        }
    }

    private String getTradingFullPage(String strLink) throws MalformedURLException, IOException {
        String[] strTmp = strLink.split("/");
        String strLink2 = "https://fril.jp/" + strTmp[strTmp.length - 1];
        String fullPage = "";
        
        URL url = new URL(strLink2);
        HttpsURLConnection req = (HttpsURLConnection)url.openConnection();
        req.setRequestMethod("GET");
        req.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        req.setRequestProperty("Cookie", Utility.gCookieID);
        req.setRequestProperty("Referer", "https://fril.jp/sell");
        
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(req.getInputStream()));
        String inputLine;
        StringBuilder stringBuilder = new StringBuilder();
        while ((inputLine = bufferedReader.readLine()) != null) {
            stringBuilder.append(inputLine);
        } 
        fullPage = stringBuilder.toString();
        return fullPage;
    }

    private boolean GetGrant2Access(int daysRemain) throws SocketException {
    //get Mac address of the computer running software        
        String macAddress = Utility.GetMACAddress2();
        String connectionString = Settings.licenseConnectionString;
    }
    
    void myTimerTick(){
        try {
            refreshListView();
        } catch (IOException ex) {
            Logger.getLogger(ListItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
}
