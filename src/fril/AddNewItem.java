/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fril;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.net.ssl.HttpsURLConnection;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.type.TypeReference;

/**
 *
 * @author CuongPhan
 */
public class AddNewItem extends javax.swing.JFrame {
    private EditInfo editInfo = null;
    private String[] imgPaths = new String[4];
    private String[] imgLinks = new String[4];
    ListItems frmListItems = null;
    List<Category> lstCategory;
    List<Sizes> lstSize;
    
    
    
//    public static void main(String[] args ){
//        AddNewItem frmAddNewItem = new AddNewItem();
//        //frmAddNewItem.SetEditedProductInfo(editedInfo);
//        frmAddNewItem.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
//        frmAddNewItem.pack();
//        frmAddNewItem.setVisible(true);  
//    }
    /**
     * Creates new form AddNewItem
     */
    public AddNewItem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbUserLst = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        cmbShippingChangeOfBuden = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cmbStateOfComodity = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        jComboBox9 = new javax.swing.JComboBox<>();
        cmbCategories = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox11 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbUserLst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField2.setText("Product Images");

        jLabel2.setText("Account");

        jLabel3.setText("Purchase Aplication");

        jLabel4.setText("Shipping Date (*)");

        jLabel5.setText("Estimate Date of Shipment (*)");

        jLabel6.setText("Shipping Method");

        jLabel7.setText("Shipping change of Buden (*)");

        jLabel8.setText("Shipping information");

        jLabel9.setText("State of Comodity (*)");

        jLabel10.setText("Brand");

        jLabel11.setText("Size (*)");

        jLabel12.setText("Category (*)");

        jLabel13.setText("Product Details");

        jLabel14.setText("Picture 1");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picture1ClickedHandle(evt);
            }
        });

        jLabel15.setText("Picture 2");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picture2ClickedHandle(evt);
            }
        });

        jLabel16.setText("Picture 3");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picture3ClickedHandle(evt);
            }
        });

        jLabel17.setText("Picture 4");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                picture4ClickedHandle(evt);
            }
        });

        jButton1.setText("Edit");

        jButton2.setText("Delete");

        jButton3.setText("Edit");

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Edit");

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Edit");

        jButton8.setText("Delete");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbUserLst, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(32, 32, 32)
                                    .addComponent(jButton2))
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbShippingChangeOfBuden, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbStateOfComodity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox8, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBox9, javax.swing.GroupLayout.Alignment.LEADING, 0, 198, Short.MAX_VALUE)
                                    .addComponent(cmbCategories, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4))
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                        .addComponent(jButton6))
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox11, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                                .addComponent(jButton8))))))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUserLst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(cmbCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbStateOfComodity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(cmbShippingChangeOfBuden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void picture1ClickedHandle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picture1ClickedHandle
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileFilter = 
                new FileNameExtensionFilter("Image files (*.jpg, *.jpeg, *.jpe, *.jfif, *.png)", "jpg", "jpeg", "jpe", "jfif", "png");
        fileChooser.setFileFilter(fileFilter);
        if(fileChooser.showOpenDialog(AddNewItem.this) == JFileChooser.APPROVE_OPTION){
            imgPaths[0] = fileChooser.getSelectedFile().getName();
            ImageIcon imageIcon = new ImageIcon(
                    new ImageIcon(fileChooser.getSelectedFile().getName()).getImage().getScaledInstance(165, 140, Image.SCALE_DEFAULT));
            jLabel14.setIcon(imageIcon);
        }
    }//GEN-LAST:event_picture1ClickedHandle

    private void picture2ClickedHandle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picture2ClickedHandle
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileFilter = 
                new FileNameExtensionFilter("Image files (*.jpg, *.jpeg, *.jpe, *.jfif, *.png)", "jpg", "jpeg", "jpe", "jfif", "png");
        fileChooser.setFileFilter(fileFilter);
        if(fileChooser.showOpenDialog(AddNewItem.this) == JFileChooser.APPROVE_OPTION){
            imgPaths[1] = fileChooser.getSelectedFile().getName();
            ImageIcon imageIcon = new ImageIcon(
                    new ImageIcon(fileChooser.getSelectedFile().getName()).getImage().getScaledInstance(165, 140, Image.SCALE_DEFAULT));
            jLabel15.setIcon(imageIcon);
        }
    }//GEN-LAST:event_picture2ClickedHandle

    private void picture3ClickedHandle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picture3ClickedHandle
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileFilter = 
                new FileNameExtensionFilter("Image files (*.jpg, *.jpeg, *.jpe, *.jfif, *.png)", "jpg", "jpeg", "jpe", "jfif", "png");
        fileChooser.setFileFilter(fileFilter);
        if(fileChooser.showOpenDialog(AddNewItem.this) == JFileChooser.APPROVE_OPTION){
            imgPaths[2] = fileChooser.getSelectedFile().getName();
            ImageIcon imageIcon = new ImageIcon(
                    new ImageIcon(fileChooser.getSelectedFile().getName()).getImage().getScaledInstance(165, 140, Image.SCALE_DEFAULT));
            jLabel16.setIcon(imageIcon);
        }
    }//GEN-LAST:event_picture3ClickedHandle

    private void picture4ClickedHandle(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_picture4ClickedHandle
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter fileFilter = 
                new FileNameExtensionFilter("Image files (*.jpg, *.jpeg, *.jpe, *.jfif, *.png)", "jpg", "jpeg", "jpe", "jfif", "png");
        fileChooser.setFileFilter(fileFilter);
        if(fileChooser.showOpenDialog(AddNewItem.this) == JFileChooser.APPROVE_OPTION){
            imgPaths[3] = fileChooser.getSelectedFile().getName();
            ImageIcon imageIcon = new ImageIcon(
                    new ImageIcon(fileChooser.getSelectedFile().getName()).getImage().getScaledInstance(165, 140, Image.SCALE_DEFAULT));
            jLabel17.setIcon(imageIcon);
        }
    }//GEN-LAST:event_picture4ClickedHandle

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbCategories;
    private javax.swing.JComboBox<String> cmbShippingChangeOfBuden;
    private javax.swing.JComboBox<String> cmbStateOfComodity;
    private javax.swing.JComboBox<String> cmbUserLst;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox11;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox8;
    private javax.swing.JComboBox<String> jComboBox9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    
    void SetFormListItems(ListItems listItems) {
        frmListItems = listItems;
    }

    void SetEditedProductInfo(EditInfo editedProductInfo) {
        editInfo = editedProductInfo;
    }
    
    private List<Sizes> getSizes() throws MalformedURLException, IOException{
        List<ItemShortInfo> lstItem = new ArrayList<ItemShortInfo>();
        String frmUrl = "https://fril.jp/ajax/size";
        URL url = new URL(frmUrl);
        HttpsURLConnection req = (HttpsURLConnection)url.openConnection();
        req.setRequestMethod("GET");
        req.setRequestProperty("Content-Type", "text/javascript; charset=utf-8");
        req.setRequestProperty("X-Requested-With", "XMLHttpRequest");
        
        String fullPage;
        String inputLine;
        StringBuilder stringBuilder = new StringBuilder();
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(req.getInputStream()));
        while((inputLine = bufferedReader.readLine())!= null){
            stringBuilder.append(inputLine);
        }
        fullPage = stringBuilder.toString();
        ObjectMapper mapper =  new ObjectMapper();
        List<Sizes> lstSizes = mapper.readValue(fullPage, new TypeReference<List<Sizes>>(){});
        //the 2nd way to create get mapper.readValue();
        //List<Sizes> lstSizes = Arrays.asList(mapper.readValue(fullPage, Sizes.class)); 
        return lstSizes;
    }
    
    void InitializeComboboxes() throws IOException{
        String userLst = Settings.userNameLst;
        StringBuilder sb = new StringBuilder(userLst);
        sb = sb.deleteCharAt(sb.length()-1);
        userLst = sb.toString();
        
        //get users list
        List<CmbItem> lstCmbUserItem = new ArrayList<CmbItem>();
        String[] strUserLst = userLst.split(";");
        for (String strUserLst1 : strUserLst) {
            if (strUserLst1.length() > 0) {
                lstCmbUserItem.add(0, new CmbItem(strUserLst1, strUserLst1));
            }
        }
        //initialize selections for user combobox
        cmbUserLst.setSelectedItem("Text");
        for(CmbItem user : lstCmbUserItem){
            cmbUserLst.addItem(user.toString());
        }
        
        //get categories list
        lstCategory = getCategory();
        if(lstCategory != null){
            cmbCategories.setSelectedItem("Text");
            List<CmbItem> lstCmbItem = new ArrayList<CmbItem>();
            for(int i = 0; i < lstCategory.size(); i++){
                lstCmbItem.add(new CmbItem("" + lstCategory.get(i).id, lstCategory.get(i).name));
            }
            //initialize selections for category combobox
            for(CmbItem item : lstCmbItem){
                cmbCategories.addItem(item.toString());
            }
        }
        cmbStateOfComodity.setSelectedItem("Text");
        List<CmbItem> lstStateOfComodity = new ArrayList<CmbItem>();
        lstStateOfComodity.add(new CmbItem("新品, 未使用", "5"));
        lstStateOfComodity.add(new CmbItem("未使用に近い", "4"));
        lstStateOfComodity.add(new CmbItem("目立った傷や汚れなし", "6"));
        lstStateOfComodity.add(new CmbItem("やや傷や汚れあり", "3"));
        lstStateOfComodity.add(new CmbItem("傷や汚れあり", "2"));
        lstStateOfComodity.add(new CmbItem("全体的に状態が悪い", "1"));
        
        for(int i = 0; i < lstStateOfComodity.size(); i++){
            cmbStateOfComodity.addItem(lstStateOfComodity.get(i).toString());
        }
        
    }

    private List<Category> getCategory() throws MalformedURLException, IOException {
        String frmUrl = "https://fril.jp/ajax/category";
        URL url = new URL(frmUrl);
        HttpsURLConnection req = (HttpsURLConnection)url.openConnection();
        req.setRequestMethod("GET");
        req.setRequestProperty("Content-Type", "text/javascript; charset=utf-8");
        req.setRequestProperty("X-Requested-With", "XMLHttpRequest");
        req.setRequestProperty("Cookie", Utility.gCookieID);
        
        String fullPage;
        String inputLine;
        StringBuilder stringBuilder = new StringBuilder();
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(req.getInputStream()));
        while((inputLine = bufferedReader.readLine())!= null){
            stringBuilder.append(inputLine);
        }
        fullPage = stringBuilder.toString();
        ObjectMapper mapper =  new ObjectMapper();
        List<Category> category = mapper.readValue(fullPage, new TypeReference<List<Category>>(){});
        //the 2nd way to create get mapper.readValue();
        //List<Sizes> lstSizes = Arrays.asList(mapper.readValue(fullPage, Sizes.class)); 
        return category;
    }
    public static class Category {
        public int id;
        public int parent_id;
        public String name;
        public String kana_name;
        public String description;
        public String sub_description;
        public String seo_name;
        public String seo_nickname;
        public int sort;
        public int size_group_id;
        public int open_flag;
        public List<Object> related_size_group_ids;
        public List<Object> children;

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public int getParent_id() {
            return parent_id;
        }

        public void setParent_id(int parent_id) {
            this.parent_id = parent_id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getKana_name() {
            return kana_name;
        }

        public void setKana_name(String kana_name) {
            this.kana_name = kana_name;
        }

        public String getDescription() {
            return description;
        }

        public void setDescription(String description) {
            this.description = description;
        }

        public String getSub_description() {
            return sub_description;
        }

        public void setSub_description(String sub_description) {
            this.sub_description = sub_description;
        }

        public String getSeo_name() {
            return seo_name;
        }

        public void setSeo_name(String seo_name) {
            this.seo_name = seo_name;
        }

        public String getSeo_nickname() {
            return seo_nickname;
        }

        public void setSeo_nickname(String seo_nickname) {
            this.seo_nickname = seo_nickname;
        }

        public int getSort() {
            return sort;
        }

        public void setSort(int sort) {
            this.sort = sort;
        }

        public int getSize_group_id() {
            return size_group_id;
        }

        public void setSize_group_id(int size_group_id) {
            this.size_group_id = size_group_id;
        }

        public int getOpen_flag() {
            return open_flag;
        }

        public void setOpen_flag(int open_flag) {
            this.open_flag = open_flag;
        }

        public List<Object> getRelated_size_group_ids() {
            return related_size_group_ids;
        }

        public void setRelated_size_group_ids(List<Object> related_size_group_ids) {
            this.related_size_group_ids = related_size_group_ids;
        }

        public List<Object> getChildren() {
            return children;
        }

        public void setChildren(List<Object> children) {
            this.children = children;
        }
        
    }

    public static class Sizes {
        public int id;
        public String name;
        public List<Size> sizes;

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public List<Size> getSizes() {
            return sizes;
        }

        public void setSizes(List<Size> sizes) {
            this.sizes = sizes;
        }
        
    }

    public static class Size {
        public int id;
        public int category_id;
        public String name;
        public int open_flag;
        public int user_custom_flag;
        public String created_at;
        public String updated_at;

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public int getCategory_id() {
            return category_id;
        }

        public void setCategory_id(int category_id) {
            this.category_id = category_id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public int getOpen_flag() {
            return open_flag;
        }

        public void setOpen_flag(int open_flag) {
            this.open_flag = open_flag;
        }

        public int getUser_custom_flag() {
            return user_custom_flag;
        }

        public void setUser_custom_flag(int user_custom_flag) {
            this.user_custom_flag = user_custom_flag;
        }

        public String getCreated_at() {
            return created_at;
        }

        public void setCreated_at(String created_at) {
            this.created_at = created_at;
        }

        public String getUpdated_at() {
            return updated_at;
        }

        public void setUpdated_at(String updated_at) {
            this.updated_at = updated_at;
        }
        
    }

    public static class CmbItem {
        public String Value;
        public String Text;

        public String getValue() {
            return Value;
        }

        public void setValue(String Value) {
            this.Value = Value;
        }

        public String getText() {
            return Text;
        }

        public void setText(String Text) {
            this.Text = Text;
        }

        public CmbItem(String Value, String Text) {
            this.Value = Value;
            this.Text = Text;
        }
       
        @Override
        public String toString(){
            return Text;
        }
    }
}

